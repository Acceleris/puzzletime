<% periods = init_periods -%>
<table>
<tr>
    <th><%= @evaluation.division_header %></th>    
    <% for p in periods -%>
    <th class="periodHead"> <%= p.label %> &nbsp; &nbsp;</th>
    <% end -%>
    <th class="periodHead">Total &nbsp; &nbsp;</th>
    <% for supp in @evaluation.division_supplement(@user)%>           
    <th><%= supp[1] %></th>
    <% end -%>  
 </tr> 
 <%= render(:partial => 'division',
            :collection => @evaluation.divisions,
            :locals => { :periods => periods }) %> 
<tr class="times_total_sum">
    <td>Total Zeit</td>
    <%= render(:partial => 'periodTime', 
               :collection => collect_times(periods, :sum_total_times),
               :locals => {:periods => periods}) %>
</tr>
<% if @evaluation.class::ATTENDANCE -%>
<tr class="times_total_sum">
    <td>Anwesenheit</td>
    <%= 
    times = (periods + [nil]).collect { |p| @evaluation.category.sumAttendance p }
    render(:partial => 'periodTime', 
           :collection => times,
           :locals => {:periods => periods, :action => 'attendanceDetails'}) %>
</tr>
<% end -%>
</table>
