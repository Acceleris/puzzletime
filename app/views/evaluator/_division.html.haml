- periodTimes = @periods.each_with_index.collect { |p, i| @times[i][division.id] }
- totalPeriodTimes = periodTimes.map { |t| t.is_a?(Hash) ? t[:hours].to_f : t.to_f }.sum

- if (@period.nil? && @evaluation.include_no_period_zero_totals) || totalPeriodTimes > 0
  %tr
    %td
      - if sub = @evaluation.sub_evaluation
        = link_to division.label_verbose,
                  {:action => sub, :category_id => division.id},
                  :title => division.tooltip
      - else
        = content_tag :span, division.label_verbose, :title => division.tooltip

    - if @evaluation.sub_work_items_eval
      %td
        - if sub = @evaluation.sub_work_items_evaluation(division)
          = link_to '&crarr;'.html_safe,
                    {:action => sub, :category_id => division.id},
                    :class => 'symbol'

    = render(:partial => 'timecell',
             :collection => periodTimes,
             :locals => {:division_id => division.id})

    - @evaluation.division_supplement(@user).each do |supp|
      %td{align: supp[2].presence}
        = self.send(supp[0], division)
